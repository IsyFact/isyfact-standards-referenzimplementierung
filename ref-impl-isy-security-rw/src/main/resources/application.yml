# ----------------------------------------------------------------------------------------------------------------------
# Isy-Fact Configuration
isy:
  logging:
    anwendung:
      name: IsyFact-Standards-Tutorial
      typ: GA
      version: 0.0.0-SNAPSHOT
  security:
    roles-claim-name: isyfact_roles     # see key cloak ... TODO
    test:
      confidential-client:
        client-id: confidential-client
        client-secret: RCX1o8KF1Iez3d0XvcKPOJjiDIFnpKay

    # Isyfact specific extension of the Spring ClientRegistration for technical user:
    oauth2:
      client:
        registration:
          reg-user-a:         # must match with spring.security.oauth2.client.registration.reg-user-a
            username: user-a                                                  # see key cloak ...
            password: test                                                    # see key cloak ...
            # Optional configuration data concerning usage of BhKnz for 2FA
            # (see isy-security: Nutzungsvorgaben: 3.2.2. Isyfact spezifische Konfigurationsparameter)

# ----------------------------------------------------------------------------------------------------------------------
# Spring Configuration
server:
  port: 8081
spring:
  jpa:
    show_sql: true            
    defer-datasource-initialization: true # let jpa create the tables before inserting the data
    generate-ddl: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        hbm2ddl:
          auto: create
  messages:
    basename: resources/nachrichten/fehler
  security:
    # persistence: database user
    user:
      password: password
    # security: IAM-URI
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'http://localhost:8989/realms/ref-impl-isy-security'    # see key cloak ...
      client:
        provider:
          testrealm:
            issuer-uri: 'http://localhost:8989/realms/ref-impl-isy-security'  # see key cloak ...
        registration:
          reg-client-a:
            client-id: client-a                                               # see key cloak ...
            client-secret: piPYyzamZYat6USdEls15OTOJdAFU60v                   # see key cloak ...
            authorization-grant-type: client_credentials
            provider: testrealm                                               # see spring.security.oauth2.client.provider
          reg-client-b:
            client-id: client-b                                               # see key cloak ...
            client-secret: htXMYwbXuxftL1x5gblwy1ysbDysLnKB                   # see key cloak ...
            authorization-grant-type: client_credentials
            provider: testrealm                                               # see spring.security.oauth2.client.provider
          reg-user-a:
            # confidential client for reg-user-a:
            client-id: ${isy.security.test.confidential-client.client-id}     # see key cloak ...
            client-secret: ${isy.security.test.confidential-client.client-secret}                  # see key cloak ...
            authorization-grant-type: password
            provider: testrealm                                               # see spring.security.oauth2.client.provider
            # isyfact specific configuration of registered user-a:
            # see isy.security.oauth2.client.registration.reg-user-a
    init:
      mode: always
      data-locations:
        - classpath:data.sql
      continue-on-error: true
